name: Tests

on:
  pull_request:
  push:

jobs:
  pytest:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 8

    env:
      TESTING_DATABASE_URL: "postgres://postgres:postgres@postgres/postgres?sslmode=disable"

    container: python:3.8
    steps:
      - uses: actions/checkout@v2

      - name: Apply migrations
        run: |
          curl -fsSL -o /usr/bin/dbmate https://github.com/amacneil/dbmate/releases/latest/download/dbmate-linux-amd64
          chmod +x /usr/bin/dbmate

          /usr/bin/dbmate --env TESTING_DATABASE_URL --no-dump-schema up

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.1.0

      - name: Install system-level dependencies
        run: sh ./tools/dependencies-pre.sh

      - name: Set up pip cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          # Use lock-file hash to key the cache.
          #
          # NOTE: the cache action does not currently allow for manual cache
          # invalidation. If we must invalidate the cache in the future, this
          # version number in the key can be increased instead, e.g. to -v2-,
          # etc.
          key: poetry-v1-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-v1-

      - name: Install python dependencies
        env:
          PIP_CACHE_DIR: "~/.cache/pip"
        run: |
          poetry install --no-root

      - name: Test with pytest
        run: |
          poetry run pytest \
            --cov \
            --cov-report=xml \
            --cov-report=term \
            --no-cov-on-fail

      - name: Upload coverage to codecov.io
        run: |
          curl -fsSL -o /tmp/codecov.sh https://codecov.io/bash
          bash /tmp/codecov.sh
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
